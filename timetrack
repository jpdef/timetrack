#!/usr/bin/env python2.7
import pyunix
import sys
import os
import subprocess
import csv
import time
import datetime
import encryptsc
import argparse
import timetracker



timetracker = timetracker.tracker();
parser = argparse.ArgumentParser(prog="TIMETRACK")
parser.add_argument("--total",action='store_true')
parser.add_argument("--show",action='store_true')
parser.add_argument("--edit",action='store_true')
parser.add_argument("--uplocal",action='store_true')
parser.add_argument("--today",action='store_true')
parser.add_argument("--upremote",nargs="+")
parser.add_argument("--dates",nargs="+")
parser.add_argument("--ticket",nargs="+")
args = parser.parse_args(namespace=timetracker)

print timetracker.ticket
if( not timetracker.todayexists()):
         timetracker.write_date()   

if args.total:
   total = 0
   for d in timetracker.db:
       if not timetracker.isDate(d) :
           total += timetracker.calcTimeRow(d) 
           print "{} {} minutes".format(d['subject'],timetracker.calcTimeRow(d))
   print "Total := {} minutes".format(total)
              
elif args.dates:
    for date in args.dates:
        todaylist = timetracker.getDay(date)
        total = 0 
        for tl in todaylist:
            itemtime = timetracker.calcTimeRow(tl)
            print "{} minutes : {} : {}".format(itemtime,tl['subject'],tl['descript'] )
            total += itemtime
        print "Total := {} minutes".format(total)

elif args.show:
    print pyunix.cat(month_file)

elif args.edit:
       subprocess.call(["vim",month_file])
 
elif args.upremote :
    #todo: use subparsing
    timetracker.update_remote(args.upremote)

elif args.local:
     timetracker.update_local()

elif sys.argv[1] == "--add":
    #New Entries
    add(sys.argv[2:])